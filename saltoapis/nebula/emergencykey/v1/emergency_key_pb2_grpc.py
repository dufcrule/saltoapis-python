# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from saltoapis.nebula.emergencykey.v1 import emergency_key_pb2 as salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2
from saltoapis.nebula.emergencykey.v1 import emergency_key_pb2 as salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2


class EmergencyKeyServiceStub(object):
    """Emergency keys are a credential type in Nebula, based on allowlisting,
    that grant access to designated access points within an installation.
    They do not expire and do not require any form of revalidation.
    This service is responsible for managing Emergency Key resources.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateEmergencyKey = channel.unary_unary(
                '/salto.nebula.emergencykey.v1.EmergencyKeyService/CreateEmergencyKey',
                request_serializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.CreateEmergencyKeyRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.EmergencyKey.FromString,
                _registered_method=True)
        self.GetEmergencyKey = channel.unary_unary(
                '/salto.nebula.emergencykey.v1.EmergencyKeyService/GetEmergencyKey',
                request_serializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.GetEmergencyKeyRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.EmergencyKey.FromString,
                _registered_method=True)
        self.ListEmergencyKeys = channel.unary_unary(
                '/salto.nebula.emergencykey.v1.EmergencyKeyService/ListEmergencyKeys',
                request_serializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.ListEmergencyKeysRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.ListEmergencyKeysResponse.FromString,
                _registered_method=True)
        self.UpdateEmergencyKey = channel.unary_unary(
                '/salto.nebula.emergencykey.v1.EmergencyKeyService/UpdateEmergencyKey',
                request_serializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.UpdateEmergencyKeyRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.EmergencyKey.FromString,
                _registered_method=True)
        self.DeleteEmergencyKey = channel.unary_unary(
                '/salto.nebula.emergencykey.v1.EmergencyKeyService/DeleteEmergencyKey',
                request_serializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.DeleteEmergencyKeyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class EmergencyKeyServiceServicer(object):
    """Emergency keys are a credential type in Nebula, based on allowlisting,
    that grant access to designated access points within an installation.
    They do not expire and do not require any form of revalidation.
    This service is responsible for managing Emergency Key resources.
    """

    def CreateEmergencyKey(self, request, context):
        """Create an emergency key

        Creates a new emergency key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEmergencyKey(self, request, context):
        """Get an emergency key

        Retrieves an existing emergency key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEmergencyKeys(self, request, context):
        """List emergency keys

        Returns a list of emergency keys that have been previously created.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEmergencyKey(self, request, context):
        """Update an emergency key

        Updates an existing emergency key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEmergencyKey(self, request, context):
        """Delete an emergency key

        Deletes an existing emergency key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EmergencyKeyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateEmergencyKey': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEmergencyKey,
                    request_deserializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.CreateEmergencyKeyRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.EmergencyKey.SerializeToString,
            ),
            'GetEmergencyKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEmergencyKey,
                    request_deserializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.GetEmergencyKeyRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.EmergencyKey.SerializeToString,
            ),
            'ListEmergencyKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEmergencyKeys,
                    request_deserializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.ListEmergencyKeysRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.ListEmergencyKeysResponse.SerializeToString,
            ),
            'UpdateEmergencyKey': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEmergencyKey,
                    request_deserializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.UpdateEmergencyKeyRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.EmergencyKey.SerializeToString,
            ),
            'DeleteEmergencyKey': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEmergencyKey,
                    request_deserializer=salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.DeleteEmergencyKeyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'salto.nebula.emergencykey.v1.EmergencyKeyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('salto.nebula.emergencykey.v1.EmergencyKeyService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class EmergencyKeyService(object):
    """Emergency keys are a credential type in Nebula, based on allowlisting,
    that grant access to designated access points within an installation.
    They do not expire and do not require any form of revalidation.
    This service is responsible for managing Emergency Key resources.
    """

    @staticmethod
    def CreateEmergencyKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.emergencykey.v1.EmergencyKeyService/CreateEmergencyKey',
            salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.CreateEmergencyKeyRequest.SerializeToString,
            salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.EmergencyKey.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEmergencyKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.emergencykey.v1.EmergencyKeyService/GetEmergencyKey',
            salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.GetEmergencyKeyRequest.SerializeToString,
            salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.EmergencyKey.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListEmergencyKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.emergencykey.v1.EmergencyKeyService/ListEmergencyKeys',
            salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.ListEmergencyKeysRequest.SerializeToString,
            salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.ListEmergencyKeysResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateEmergencyKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.emergencykey.v1.EmergencyKeyService/UpdateEmergencyKey',
            salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.UpdateEmergencyKeyRequest.SerializeToString,
            salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.EmergencyKey.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteEmergencyKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.emergencykey.v1.EmergencyKeyService/DeleteEmergencyKey',
            salto_dot_nebula_dot_emergencykey_dot_v1_dot_emergency__key__pb2.DeleteEmergencyKeyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
