# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from saltoapis.nebula.device.v1 import device_pb2 as salto_dot_nebula_dot_device_dot_v1_dot_device__pb2
from saltoapis.nebula.device.v1 import device_pb2 as salto_dot_nebula_dot_device_dot_v1_dot_device__pb2


class DeviceServiceStub(object):
    """A device could be an electronic lock, gateway, extender or any piece of
    hardware manufactured by SALTO. This service provides access to an aggregated
    view of all of them in an eventual consistent way.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDevice = channel.unary_unary(
                '/salto.nebula.device.v1.DeviceService/GetDevice',
                request_serializer=salto_dot_nebula_dot_device_dot_v1_dot_device__pb2.GetDeviceRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_device_dot_v1_dot_device__pb2.Device.FromString,
                _registered_method=True)
        self.ListDevices = channel.unary_unary(
                '/salto.nebula.device.v1.DeviceService/ListDevices',
                request_serializer=salto_dot_nebula_dot_device_dot_v1_dot_device__pb2.ListDevicesRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_device_dot_v1_dot_device__pb2.ListDevicesResponse.FromString,
                _registered_method=True)


class DeviceServiceServicer(object):
    """A device could be an electronic lock, gateway, extender or any piece of
    hardware manufactured by SALTO. This service provides access to an aggregated
    view of all of them in an eventual consistent way.
    """

    def GetDevice(self, request, context):
        """Get a device

        Gets an existing device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDevices(self, request, context):
        """List devices

        Returns a list of devices that have been previously created.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeviceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDevice': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDevice,
                    request_deserializer=salto_dot_nebula_dot_device_dot_v1_dot_device__pb2.GetDeviceRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_device_dot_v1_dot_device__pb2.Device.SerializeToString,
            ),
            'ListDevices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDevices,
                    request_deserializer=salto_dot_nebula_dot_device_dot_v1_dot_device__pb2.ListDevicesRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_device_dot_v1_dot_device__pb2.ListDevicesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'salto.nebula.device.v1.DeviceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeviceService(object):
    """A device could be an electronic lock, gateway, extender or any piece of
    hardware manufactured by SALTO. This service provides access to an aggregated
    view of all of them in an eventual consistent way.
    """

    @staticmethod
    def GetDevice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.device.v1.DeviceService/GetDevice',
            salto_dot_nebula_dot_device_dot_v1_dot_device__pb2.GetDeviceRequest.SerializeToString,
            salto_dot_nebula_dot_device_dot_v1_dot_device__pb2.Device.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDevices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.device.v1.DeviceService/ListDevices',
            salto_dot_nebula_dot_device_dot_v1_dot_device__pb2.ListDevicesRequest.SerializeToString,
            salto_dot_nebula_dot_device_dot_v1_dot_device__pb2.ListDevicesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
