# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from saltoapis.nebula.installation.v1 import encrypted_payload_pb2 as salto_dot_nebula_dot_installation_dot_v1_dot_encrypted__payload__pb2
from saltoapis.nebula.installation.v1 import encrypted_payload_pb2 as salto_dot_nebula_dot_installation_dot_v1_dot_encrypted__payload__pb2


class EncryptedPayloadServiceStub(object):
    """This service is responsible for the ingestion of encrypted payloads.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.IngestEncryptedPayloads = channel.unary_unary(
                '/salto.nebula.installation.v1.EncryptedPayloadService/IngestEncryptedPayloads',
                request_serializer=salto_dot_nebula_dot_installation_dot_v1_dot_encrypted__payload__pb2.IngestEncryptedPayloadsRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_installation_dot_v1_dot_encrypted__payload__pb2.IngestEncryptedPayloadsResponse.FromString,
                _registered_method=True)


class EncryptedPayloadServiceServicer(object):
    """This service is responsible for the ingestion of encrypted payloads.
    """

    def IngestEncryptedPayloads(self, request, context):
        """Ingest encrypted payloads

        Ingests encrypted payload for a given installation.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EncryptedPayloadServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'IngestEncryptedPayloads': grpc.unary_unary_rpc_method_handler(
                    servicer.IngestEncryptedPayloads,
                    request_deserializer=salto_dot_nebula_dot_installation_dot_v1_dot_encrypted__payload__pb2.IngestEncryptedPayloadsRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_installation_dot_v1_dot_encrypted__payload__pb2.IngestEncryptedPayloadsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'salto.nebula.installation.v1.EncryptedPayloadService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EncryptedPayloadService(object):
    """This service is responsible for the ingestion of encrypted payloads.
    """

    @staticmethod
    def IngestEncryptedPayloads(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.installation.v1.EncryptedPayloadService/IngestEncryptedPayloads',
            salto_dot_nebula_dot_installation_dot_v1_dot_encrypted__payload__pb2.IngestEncryptedPayloadsRequest.SerializeToString,
            salto_dot_nebula_dot_installation_dot_v1_dot_encrypted__payload__pb2.IngestEncryptedPayloadsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
