# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from saltoapis.nebula.event.v1 import event_pb2 as salto_dot_nebula_dot_event_dot_v1_dot_event__pb2
from saltoapis.nebula.event.v1 import event_pb2 as salto_dot_nebula_dot_event_dot_v1_dot_event__pb2


class EventServiceStub(object):
    """Events allow you to see activity, such as an access point opening, that is
    taking place within an installation. This service is responsible for managing
    event resources.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetEvent = channel.unary_unary(
                '/salto.nebula.event.v1.EventService/GetEvent',
                request_serializer=salto_dot_nebula_dot_event_dot_v1_dot_event__pb2.GetEventRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_event_dot_v1_dot_event__pb2.Event.FromString,
                _registered_method=True)
        self.ListEvents = channel.unary_unary(
                '/salto.nebula.event.v1.EventService/ListEvents',
                request_serializer=salto_dot_nebula_dot_event_dot_v1_dot_event__pb2.ListEventsRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_event_dot_v1_dot_event__pb2.ListEventsResponse.FromString,
                _registered_method=True)


class EventServiceServicer(object):
    """Events allow you to see activity, such as an access point opening, that is
    taking place within an installation. This service is responsible for managing
    event resources.
    """

    def GetEvent(self, request, context):
        """Get an event

        Gets an existing event.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEvents(self, request, context):
        """List events

        Returns a list of events that have been previously created.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EventServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEvent,
                    request_deserializer=salto_dot_nebula_dot_event_dot_v1_dot_event__pb2.GetEventRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_event_dot_v1_dot_event__pb2.Event.SerializeToString,
            ),
            'ListEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEvents,
                    request_deserializer=salto_dot_nebula_dot_event_dot_v1_dot_event__pb2.ListEventsRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_event_dot_v1_dot_event__pb2.ListEventsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'salto.nebula.event.v1.EventService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class EventService(object):
    """Events allow you to see activity, such as an access point opening, that is
    taking place within an installation. This service is responsible for managing
    event resources.
    """

    @staticmethod
    def GetEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.event.v1.EventService/GetEvent',
            salto_dot_nebula_dot_event_dot_v1_dot_event__pb2.GetEventRequest.SerializeToString,
            salto_dot_nebula_dot_event_dot_v1_dot_event__pb2.Event.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.event.v1.EventService/ListEvents',
            salto_dot_nebula_dot_event_dot_v1_dot_event__pb2.ListEventsRequest.SerializeToString,
            salto_dot_nebula_dot_event_dot_v1_dot_event__pb2.ListEventsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
