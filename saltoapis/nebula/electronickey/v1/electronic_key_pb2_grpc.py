# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from saltoapis.longrunning.v1 import operation_pb2 as salto_dot_longrunning_dot_v1_dot_operation__pb2
from saltoapis.longrunning.v1 import operation_pb2 as salto_dot_longrunning_dot_v1_dot_operation__pb2
from saltoapis.nebula.electronickey.v1 import electronic_key_pb2 as salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2
from saltoapis.nebula.electronickey.v1 import electronic_key_pb2 as salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2


class ElectronicKeyServiceStub(object):
    """An electronic key is battery-powered device used to interact with electronic locks.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateElectronicKey = channel.unary_unary(
                '/salto.nebula.electronickey.v1.ElectronicKeyService/CreateElectronicKey',
                request_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.CreateElectronicKeyRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ElectronicKey.FromString,
                _registered_method=True)
        self.GetElectronicKey = channel.unary_unary(
                '/salto.nebula.electronickey.v1.ElectronicKeyService/GetElectronicKey',
                request_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.GetElectronicKeyRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ElectronicKey.FromString,
                _registered_method=True)
        self.ListElectronicKeys = channel.unary_unary(
                '/salto.nebula.electronickey.v1.ElectronicKeyService/ListElectronicKeys',
                request_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ListElectronicKeysRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ListElectronicKeysResponse.FromString,
                _registered_method=True)
        self.UpdateElectronicKey = channel.unary_unary(
                '/salto.nebula.electronickey.v1.ElectronicKeyService/UpdateElectronicKey',
                request_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.UpdateElectronicKeyRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ElectronicKey.FromString,
                _registered_method=True)
        self.DeleteElectronicKey = channel.unary_unary(
                '/salto.nebula.electronickey.v1.ElectronicKeyService/DeleteElectronicKey',
                request_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.DeleteElectronicKeyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.BindElectronicKey = channel.unary_unary(
                '/salto.nebula.electronickey.v1.ElectronicKeyService/BindElectronicKey',
                request_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.BindElectronicKeyRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.BindElectronicKeyResponse.FromString,
                _registered_method=True)
        self.UnbindElectronicKey = channel.unary_unary(
                '/salto.nebula.electronickey.v1.ElectronicKeyService/UnbindElectronicKey',
                request_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.UnbindElectronicKeyRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.UnbindElectronicKeyResponse.FromString,
                _registered_method=True)
        self.InitializeElectronicKey = channel.unary_unary(
                '/salto.nebula.electronickey.v1.ElectronicKeyService/InitializeElectronicKey',
                request_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.InitializeElectronicKeyRequest.SerializeToString,
                response_deserializer=salto_dot_longrunning_dot_v1_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.ConfigureElectronicKey = channel.unary_unary(
                '/salto.nebula.electronickey.v1.ElectronicKeyService/ConfigureElectronicKey',
                request_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ConfigureElectronicKeyRequest.SerializeToString,
                response_deserializer=salto_dot_longrunning_dot_v1_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.ResetElectronicKey = channel.unary_unary(
                '/salto.nebula.electronickey.v1.ElectronicKeyService/ResetElectronicKey',
                request_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ResetElectronicKeyRequest.SerializeToString,
                response_deserializer=salto_dot_longrunning_dot_v1_dot_operation__pb2.Operation.FromString,
                _registered_method=True)
        self.GenerateAuthorizationToken = channel.unary_unary(
                '/salto.nebula.electronickey.v1.ElectronicKeyService/GenerateAuthorizationToken',
                request_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.GenerateAuthorizationTokenRequest.SerializeToString,
                response_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.GenerateAuthorizationTokenResponse.FromString,
                _registered_method=True)
        self.GenerateFirmwareDownloadUri = channel.unary_unary(
                '/salto.nebula.electronickey.v1.ElectronicKeyService/GenerateFirmwareDownloadUri',
                request_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.GenerateFirmwareDownloadUriRequest.SerializeToString,
                response_deserializer=salto_dot_longrunning_dot_v1_dot_operation__pb2.Operation.FromString,
                _registered_method=True)


class ElectronicKeyServiceServicer(object):
    """An electronic key is battery-powered device used to interact with electronic locks.
    """

    def CreateElectronicKey(self, request, context):
        """Create a new electronic key

        Creates a new electronic key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetElectronicKey(self, request, context):
        """Get an electronic key

        Gets an existing electronic key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListElectronicKeys(self, request, context):
        """List electronic keys

        Returns a list of electronic keys that have been previously created.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateElectronicKey(self, request, context):
        """Update an electronic key

        Updates an existing electronic key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteElectronicKey(self, request, context):
        """Delete an electronic key

        Permanently deletes an electronic key. This cannot be undone.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BindElectronicKey(self, request, context):
        """Bind an electronic key

        Binds an electronic key. Binding an electronic key assigns a device
        identifier to the electronic key. After binding, the device can then be
        initialized or configured.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnbindElectronicKey(self, request, context):
        """Unbind an electronic key

        Unbinds an electronic key. Unbinding an electronic key removes the
        device identifier from the electronic key. This may be required in some
        cases where the electronic key is not available anymore because, for
        example, it's broken or damaged. Unbinding allows the initialization of
        the replacement device without removing it from the installation. It also
        means the device keeps all the information associated with it, such as
        events.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InitializeElectronicKey(self, request, context):
        """Initialize an electronic key

        Initializes an electronic key. Electronic keys need to be initialized
        before you can start to use them.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ConfigureElectronicKey(self, request, context):
        """Configure an electronic key

        Configures an electronic key. Configuring an electronic key implies
        adding some information to the electronic key such as setting the time
        zone.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResetElectronicKey(self, request, context):
        """Reset an electronic key

        Resetting a device such as an electronic key means returning it to its
        factory settings. Resetting is the process of removing the identity as
        well as all the associated information of an already configured device.
        Once a device has been reset, you need to reconfigure it.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateAuthorizationToken(self, request, context):
        """Generate authorization token for an electronic key

        Generates an authorization token that allows to connect to, authenticate and
        authorize an electronic key.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateFirmwareDownloadUri(self, request, context):
        """Generate electronic key firmware download URI

        Provides the download URI for the latest firmware bundle for the
        electronic key. The returned URI can be used to bring the electronic key
        firmwares up to latest.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ElectronicKeyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateElectronicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateElectronicKey,
                    request_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.CreateElectronicKeyRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ElectronicKey.SerializeToString,
            ),
            'GetElectronicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.GetElectronicKey,
                    request_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.GetElectronicKeyRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ElectronicKey.SerializeToString,
            ),
            'ListElectronicKeys': grpc.unary_unary_rpc_method_handler(
                    servicer.ListElectronicKeys,
                    request_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ListElectronicKeysRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ListElectronicKeysResponse.SerializeToString,
            ),
            'UpdateElectronicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateElectronicKey,
                    request_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.UpdateElectronicKeyRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ElectronicKey.SerializeToString,
            ),
            'DeleteElectronicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteElectronicKey,
                    request_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.DeleteElectronicKeyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'BindElectronicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.BindElectronicKey,
                    request_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.BindElectronicKeyRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.BindElectronicKeyResponse.SerializeToString,
            ),
            'UnbindElectronicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.UnbindElectronicKey,
                    request_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.UnbindElectronicKeyRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.UnbindElectronicKeyResponse.SerializeToString,
            ),
            'InitializeElectronicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.InitializeElectronicKey,
                    request_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.InitializeElectronicKeyRequest.FromString,
                    response_serializer=salto_dot_longrunning_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
            'ConfigureElectronicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigureElectronicKey,
                    request_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ConfigureElectronicKeyRequest.FromString,
                    response_serializer=salto_dot_longrunning_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
            'ResetElectronicKey': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetElectronicKey,
                    request_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ResetElectronicKeyRequest.FromString,
                    response_serializer=salto_dot_longrunning_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
            'GenerateAuthorizationToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateAuthorizationToken,
                    request_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.GenerateAuthorizationTokenRequest.FromString,
                    response_serializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.GenerateAuthorizationTokenResponse.SerializeToString,
            ),
            'GenerateFirmwareDownloadUri': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateFirmwareDownloadUri,
                    request_deserializer=salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.GenerateFirmwareDownloadUriRequest.FromString,
                    response_serializer=salto_dot_longrunning_dot_v1_dot_operation__pb2.Operation.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'salto.nebula.electronickey.v1.ElectronicKeyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ElectronicKeyService(object):
    """An electronic key is battery-powered device used to interact with electronic locks.
    """

    @staticmethod
    def CreateElectronicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.electronickey.v1.ElectronicKeyService/CreateElectronicKey',
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.CreateElectronicKeyRequest.SerializeToString,
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ElectronicKey.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetElectronicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.electronickey.v1.ElectronicKeyService/GetElectronicKey',
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.GetElectronicKeyRequest.SerializeToString,
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ElectronicKey.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListElectronicKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.electronickey.v1.ElectronicKeyService/ListElectronicKeys',
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ListElectronicKeysRequest.SerializeToString,
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ListElectronicKeysResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateElectronicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.electronickey.v1.ElectronicKeyService/UpdateElectronicKey',
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.UpdateElectronicKeyRequest.SerializeToString,
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ElectronicKey.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteElectronicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.electronickey.v1.ElectronicKeyService/DeleteElectronicKey',
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.DeleteElectronicKeyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BindElectronicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.electronickey.v1.ElectronicKeyService/BindElectronicKey',
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.BindElectronicKeyRequest.SerializeToString,
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.BindElectronicKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnbindElectronicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.electronickey.v1.ElectronicKeyService/UnbindElectronicKey',
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.UnbindElectronicKeyRequest.SerializeToString,
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.UnbindElectronicKeyResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InitializeElectronicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.electronickey.v1.ElectronicKeyService/InitializeElectronicKey',
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.InitializeElectronicKeyRequest.SerializeToString,
            salto_dot_longrunning_dot_v1_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ConfigureElectronicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.electronickey.v1.ElectronicKeyService/ConfigureElectronicKey',
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ConfigureElectronicKeyRequest.SerializeToString,
            salto_dot_longrunning_dot_v1_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResetElectronicKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.electronickey.v1.ElectronicKeyService/ResetElectronicKey',
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.ResetElectronicKeyRequest.SerializeToString,
            salto_dot_longrunning_dot_v1_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateAuthorizationToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.electronickey.v1.ElectronicKeyService/GenerateAuthorizationToken',
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.GenerateAuthorizationTokenRequest.SerializeToString,
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.GenerateAuthorizationTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateFirmwareDownloadUri(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/salto.nebula.electronickey.v1.ElectronicKeyService/GenerateFirmwareDownloadUri',
            salto_dot_nebula_dot_electronickey_dot_v1_dot_electronic__key__pb2.GenerateFirmwareDownloadUriRequest.SerializeToString,
            salto_dot_longrunning_dot_v1_dot_operation__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
